add : mul + add | mul - add
	| mul

mul : exp * mul | exp / mul
	| exp

exp : atom ^ exp
	| atom

atom: (add)
	| NUMBER

# Make left recursive for left-associativity
# Handle left recursion using loops
# Exponents are right-associative so keep the same

parse
	| add EOF

add : add + mul | add - mul
	| mul

mul : mul * exp | mul / exp
	| exp

exp : atom ^ exp
	| atom

atom: (add)
	| NUMBER
